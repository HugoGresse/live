@@ -16,6 +16,9 @@
   // Get safe area insets to account for notches, etc.
   const insets = useSafeAreaInsets();
 
+  // Component state that holds the detected object class
+  const [objectClass, setObjectClass] = React.useState<string>('');
+
   async function handleImage(image: Image) {
     const {result} = await MobileModel.execute<ImageClassificationResult>(
       model,
@@ -27,8 +30,8 @@
     // Get max index (argmax) result to resolve the top class name
     const topClass = ImageClasses[result.maxIdx];
 
-    // Log top class to Metro console
-    console.log(topClass);
+    // Set object class state to be the top class detected in the image
+    setObjectClass(topClass);
 
     // It is important to release the image to avoid memory leaks
     image.release();
@@ -40,7 +43,7 @@
         styles.container,
         {marginTop: insets.top, marginBottom: insets.bottom},
       ]}>
-      <Text style={styles.label}>Image Classification</Text>
+      <Text style={styles.label}>Object: {objectClass}</Text>
       <Camera style={styles.camera} onCapture={handleImage} />
     </View>
   );
