(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[920],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?i.createElement(h,r(r({ref:t},u),{},{components:n})):i.createElement(h,r({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9435:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var i=n(7294),a="surveyLinkBox_YpLv";function o(e){var t="https://docs.google.com/forms/d/e/1FAIpQLScsB21xJWM_VANad5GcVkQqKB_BptS77axbunzs7ZkwoE5JUw/viewform?usp=pp_url&entry.1880917601="+e.docTitle.replace(/\s/g,"+");return i.createElement("a",{href:t,target:"_blank"},i.createElement("div",{className:a},"Share what we can improve!"))}},395:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var i=n(2122),a=n(9756),o=(n(7294),n(3905)),r=n(9435),s=["components"],l={id:"question-answering",sidebar_position:3},c={unversionedId:"tutorials/question-answering",id:"tutorials/question-answering",isDocsHomePage:!1,title:"Question Answering",description:"In this tutorial, we will integrate an on-device NLP (Natural Language Processing) model that can answer questions about a short paragraph of text.",source:"@site/docs/tutorials/question-answering.mdx",sourceDirName:"tutorials",slug:"/tutorials/question-answering",permalink:"/docs/tutorials/question-answering",editUrl:"https://github.com/facebookexperimental/pytorch-live/edit/master/website/docs/tutorials/question-answering.mdx",version:"current",sidebarPosition:3,frontMatter:{id:"question-answering",sidebar_position:3},sidebar:"docs",previous:{title:"Image Classification",permalink:"/docs/tutorials/image-classification"},next:{title:"MNIST Digit Classification",permalink:"/docs/tutorials/mnist-digit-classification"}},u=[{value:"In this tutorial, we will integrate an on-device NLP (Natural Language Processing) model that can answer questions about a short paragraph of text.",id:"in-this-tutorial-we-will-integrate-an-on-device-nlp-natural-language-processing-model-that-can-answer-questions-about-a-short-paragraph-of-text",children:[]},{value:"Initialize New Project",id:"initialize-new-project",children:[{value:"Run the project in the emulator",id:"run-the-project-in-the-emulator",children:[]}]},{value:"Question Answering Demo",id:"question-answering-demo",children:[{value:"Add Question Answering Demo to demos list",id:"add-question-answering-demo-to-demos-list",children:[]},{value:"Style the component",id:"style-the-component",children:[]},{value:"Add state and event handler",id:"add-state-and-event-handler",children:[]},{value:"Run model inference",id:"run-model-inference",children:[]},{value:"Add user feedback",id:"add-user-feedback",children:[]}]},{value:"Give us feedback",id:"give-us-feedback",children:[]}],d={toc:u};function p(e){var t=e.components,l=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"tutorial-page"},(0,o.kt)("h3",{id:"in-this-tutorial-we-will-integrate-an-on-device-nlp-natural-language-processing-model-that-can-answer-questions-about-a-short-paragraph-of-text"},"In this tutorial, we will integrate an on-device NLP (Natural Language Processing) model that can answer questions about a short paragraph of text."),(0,o.kt)("p",null,"If you haven't installed the PyTorch Live CLI yet, please ",(0,o.kt)("a",{parentName:"p",href:"get-started"},"follow this tutorial")," to get started."),(0,o.kt)("p",null,"If you get lost at any point in this tutorial, completed examples of each step can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pytorch/live/tree/main/examples/question-answering/"},"here"),"."),(0,o.kt)("h2",{id:"initialize-new-project"},"Initialize New Project"),(0,o.kt)("p",null,"Let's start by initializing a new project ",(0,o.kt)("inlineCode",{parentName:"p"},"QuestionAnsweringTutorial")," with the PyTorch Live CLI."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npx torchlive-cli init QuestionAnsweringTutorial\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The project init can take a few minutes depending on your internet connection and your machine."))),(0,o.kt)("p",null,"After completion, navigate to the ",(0,o.kt)("inlineCode",{parentName:"p"},"QuestionAnsweringTutorial")," directory created by the ",(0,o.kt)("inlineCode",{parentName:"p"},"init")," command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd QuestionAnsweringTutorial\n")),(0,o.kt)("h3",{id:"run-the-project-in-the-emulator"},"Run the project in the emulator"),(0,o.kt)("p",null,"Run the QuestionAnsweringTutorial project in the Android emulator with the PyTorch Live CLI. The ",(0,o.kt)("inlineCode",{parentName:"p"},"run-android")," command will start the Android emulator, build, deploy, and run the app. The app is named PyTorch Live Example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npx torchlive-cli run-android\n")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(6161).Z,title:"The PyTorch Live app running in a virtual device emulator"})),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Keep the app open and running! Any code change will immediately be reflected after saving."))),(0,o.kt)("h2",{id:"question-answering-demo"},"Question Answering Demo"),(0,o.kt)("p",null,"Let's get started with the UI for the question answering. Create a file ",(0,o.kt)("inlineCode",{parentName:"p"},"QuestionAnsweringDemo.tsx")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"./src/demos"),", copy and paste the code below, and save the file. The initial code creates a component rendering two text inputs, a button, and a text with ",(0,o.kt)("inlineCode",{parentName:"p"},"Question Answering"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="./src/demos/QuestionAnsweringDemo.tsx"',title:'"./src/demos/QuestionAnsweringDemo.tsx"'},'import * as React from \'react\';\nimport {Button, Text, TextInput, View} from \'react-native\';\n\nexport default function QuestionAnsweringDemo() {\n  return (\n    <View>\n      <TextInput placeholder="Text" />\n      <TextInput placeholder="Question" />\n      <Button title="Ask" onPress={() => {}} />\n      <Text>Question Answering</Text>\n    </View>\n  );\n}\n')),(0,o.kt)("h3",{id:"add-question-answering-demo-to-demos-list"},"Add Question Answering Demo to demos list"),(0,o.kt)("p",null,"For the ",(0,o.kt)("inlineCode",{parentName:"p"},"QuestionAnsweringDemo")," component to render in the ",(0,o.kt)("inlineCode",{parentName:"p"},"QuestionAnsweringTutorial")," app, add it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"MyDemos")," component."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"MyDemos.tsx")," already contains code. Replace the code with the code below."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="./src/demos/MyDemos.tsx"',title:'"./src/demos/MyDemos.tsx"'},"import * as React from 'react';\nimport QuestionAnsweringDemo from './QuestionAnsweringDemo';\n\nexport default function MyDemos() {\n  return (\n    <QuestionAnsweringDemo />\n  );\n}\n")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(7527).Z})),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'Tap on the "My Demos" tab to view your changes.'))),(0,o.kt)("h3",{id:"style-the-component"},"Style the component"),(0,o.kt)("p",null,"Great! Next, add some styling to the question answering component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'{2,6-8,10,15-25} title="./src/demos/QuestionAnsweringDemo.tsx"',"{2,6-8,10,15-25}":!0,title:'"./src/demos/QuestionAnsweringDemo.tsx"'},'import * as React from \'react\';\nimport {Button, StyleSheet, Text, TextInput, View} from \'react-native\';\n\nexport default function QuestionAnsweringDemo() {\n  return (\n    <View style={styles.container}>\n      <TextInput style={[styles.item, styles.input]} multiline={true} placeholder="Text" placeholderTextColor="#CCC" />\n      <TextInput style={[styles.item, styles.input]} placeholder="Question" placeholderTextColor="#CCC" />\n      <Button title="Ask" onPress={() => {}} />\n      <Text style={styles.item}>Question Answering</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  item: {\n    margin: 10,\n  },\n  input: {\n    borderWidth: 1,\n    color: \'#000\',\n  }\n});\n')),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(5925).Z})),(0,o.kt)("h3",{id:"add-state-and-event-handler"},"Add state and event handler"),(0,o.kt)("p",null,"Add state to the text inputs. React provides the ",(0,o.kt)("inlineCode",{parentName:"p"},"useState")," hook to save component state. A ",(0,o.kt)("inlineCode",{parentName:"p"},"useState")," hook returns an array with two items (or tuple). The first item (index ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),") is the current state and the second item (index ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),") is the set state function to update the state. In this change, it uses two ",(0,o.kt)("inlineCode",{parentName:"p"},"useState")," hooks, one for the ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," state and one for the ",(0,o.kt)("inlineCode",{parentName:"p"},"question")," state."),(0,o.kt)("p",null,"Add an event handler to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Ask")," button. The event handler ",(0,o.kt)("inlineCode",{parentName:"p"},"handleAsk")," will be called when the button is pressed and log the ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," state and ",(0,o.kt)("inlineCode",{parentName:"p"},"question")," state to the console (i.e., it will log what is typed into the text inputs)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'{6-14,18-20} title="./src/demos/QuestionAnsweringDemo.tsx"',"{6-14,18-20}":!0,title:'"./src/demos/QuestionAnsweringDemo.tsx"'},"import * as React from 'react';\nimport {useState} from 'react';\nimport {Button, StyleSheet, Text, TextInput, View} from 'react-native';\n\nexport default function QuestionAnsweringDemo() {\n  const [text, setText] = useState('');\n  const [question, setQuestion] = useState('');\n\n  function handleAsk() {\n    console.log({\n      text,\n      question,\n    });\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput style={[styles.item, styles.input]} placeholder=\"Text\" placeholderTextColor=\"#CCC\" multiline={true} value={text} onChangeText={setText} />\n      <TextInput style={[styles.item, styles.input]} placeholder=\"Question\" placeholderTextColor=\"#CCC\" value={question} onChangeText={setQuestion} />\n      <Button title=\"Ask\" onPress={handleAsk} />\n      <Text style={styles.item}>Question Answering</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  item: {\n    margin: 10,\n  },\n  input: {\n    borderWidth: 1,\n    color: '#000',\n  }\n});\n")),(0,o.kt)("p",null,"Type into both text inputs, click the ",(0,o.kt)("inlineCode",{parentName:"p"},"Ask")," button, and check logged output in terminal."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(3059).Z})),(0,o.kt)("h3",{id:"run-model-inference"},"Run model inference"),(0,o.kt)("p",null,"Fantastic! Now use the ",(0,o.kt)("inlineCode",{parentName:"p"},"useNLPQAModelInference")," hook to run inference on the ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"question"),". The hook provides a ",(0,o.kt)("inlineCode",{parentName:"p"},"processQA")," function and an ",(0,o.kt)("inlineCode",{parentName:"p"},"answer"),". Replace the ",(0,o.kt)("inlineCode",{parentName:"p"},"console.log")," with the ",(0,o.kt)("inlineCode",{parentName:"p"},"processQA")," function and pass in the ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"question"),". When the inference finishes, the component re-renders with the answer set as content of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Text")," component."),(0,o.kt)("p",null,"It will use the ",(0,o.kt)("inlineCode",{parentName:"p"},"bert_qa.ptl")," model that is already prepared for PyTorch Live. You can follow the ",(0,o.kt)("a",{parentName:"p",href:"prepare-custom-model"},"Prepare Custom Model")," tutorial to prepare your own NLP model and use this model instead for question answering."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'{2,4-5,7-10,15-18,21,29} title="./src/demos/QuestionAnsweringDemo.tsx"',"{2,4-5,7-10,15-18,21,29}":!0,title:'"./src/demos/QuestionAnsweringDemo.tsx"'},"import * as React from 'react';\nimport {useState} from 'react';\nimport {Button, StyleSheet, Text, TextInput, View} from 'react-native';\nimport type {ModelInfo} from 'react-native-pytorch-core';\nimport useNLPQAModelInference from '../useNLPQAModelInference';\n\nconst modelInfo: ModelInfo = {\n  name: 'Bert Q&A',\n  model: require('../../models/bert_qa.ptl'),\n}\n\nexport default function QuestionAnsweringDemo() {\n  const [text, setText] = useState('');\n  const [question, setQuestion] = useState('');\n  const {\n    answer,\n    processQA,\n  } = useNLPQAModelInference(modelInfo);\n\n  function handleAsk() {\n    processQA(text, question);\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput style={[styles.item, styles.input]} placeholder=\"Text\" placeholderTextColor=\"#CCC\" multiline={true} value={text} onChangeText={setText} />\n      <TextInput style={[styles.item, styles.input]} placeholder=\"Question\" placeholderTextColor=\"#CCC\" value={question} onChangeText={setQuestion} />\n      <Button title=\"Ask\" onPress={handleAsk} />\n      <Text style={styles.item}>{answer}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  item: {\n    margin: 10,\n  },\n  input: {\n    borderWidth: 1,\n    color: '#000',\n  }\n});\n")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(2248).Z})),(0,o.kt)("h3",{id:"add-user-feedback"},"Add user feedback"),(0,o.kt)("p",null,"Add user feedback while the inference is running. The ",(0,o.kt)("inlineCode",{parentName:"p"},"useNLPQAModelInference")," hook also provides an ",(0,o.kt)("inlineCode",{parentName:"p"},"isProcessing")," state which is ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," when the inference is running and ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," otherwise. The ",(0,o.kt)("inlineCode",{parentName:"p"},"isProcessing"),' is used to render "Looking for the answer" while the model inference is running and it will render the answer when it is done.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'{17,30} title="./src/demos/QuestionAnsweringDemo.tsx"',"{17,30}":!0,title:'"./src/demos/QuestionAnsweringDemo.tsx"'},"import * as React from 'react';\nimport {useState} from 'react';\nimport {Button, StyleSheet, Text, TextInput, View} from 'react-native';\nimport type {ModelInfo} from 'react-native-pytorch-core';\nimport useNLPQAModelInference from '../useNLPQAModelInference';\n\nconst modelInfo: ModelInfo = {\n  name: 'Bert Q&A',\n  model: require('../../models/bert_qa.ptl'),\n}\n\nexport default function QuestionAnsweringDemo() {\n  const [text, setText] = useState('');\n  const [question, setQuestion] = useState('');\n  const {\n    answer,\n    isProcessing,\n    processQA,\n  } = useNLPQAModelInference(modelInfo);\n\n  function handleAsk() {\n    processQA(text, question);\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput style={[styles.item, styles.input]} placeholder=\"Text\" placeholderTextColor=\"#CCC\" multiline={true} value={text} onChangeText={setText} />\n      <TextInput style={[styles.item, styles.input]} placeholder=\"Question\" placeholderTextColor=\"#CCC\" value={question} onChangeText={setQuestion} />\n      <Button title=\"Ask\" onPress={handleAsk} />\n      <Text style={styles.item}>{isProcessing ? \"Looking for the answer\" : answer}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  item: {\n    margin: 10,\n  },\n  input: {\n    borderWidth: 1,\n    color: '#000',\n  }\n});\n")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(5190).Z})," ",(0,o.kt)("img",{src:n(2248).Z})),(0,o.kt)("h2",{id:"give-us-feedback"},"Give us feedback"),(0,o.kt)(r.Z,{docTitle:"Question Answering",mdxType:"SurveyLinkButton"})))}p.isMDXComponent=!0},6161:function(e,t,n){"use strict";t.Z=n.p+"assets/images/question_answering_tutorial1-708db6410ba366d0aa27fc213d7af1dd.png"},7527:function(e,t,n){"use strict";t.Z=n.p+"assets/images/question_answering_tutorial2-0ac9374b4f19e95c52979ac5d879e11f.png"},5925:function(e,t,n){"use strict";t.Z=n.p+"assets/images/question_answering_tutorial3-9ac90e0ae83c901a15637ab2ae7f98ae.png"},3059:function(e,t,n){"use strict";t.Z=n.p+"assets/images/question_answering_tutorial4-1a5e16a379030dc31127e5b01191f567.png"},2248:function(e,t,n){"use strict";t.Z=n.p+"assets/images/question_answering_tutorial5-33c8718eb6c6dd90ca37688e7a51f3c7.png"},5190:function(e,t,n){"use strict";t.Z=n.p+"assets/images/question_answering_tutorial6-f0478f3ba7983e77a3c44d01bc3a79f7.png"}}]);